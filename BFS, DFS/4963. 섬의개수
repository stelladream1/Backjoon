from collections import deque
q = deque()
dx = [1, -1, 0, 0, 1, -1, 1, -1]
dy = [0, 0, -1, 1, -1, 1, 1, -1]
def bfs(x,y):
    q.append((x,y))
    visit[x][y]=1
    while q:
        x, y = q.popleft()
        for i in range(8):
            nx= x + dx[i]
            ny = y + dy[i]
            if 0<=nx<n and 0<=ny<m:
                if visit[nx][ny]==0 and graph[nx][ny]==1:
                    visit[nx][ny] = 1
                    q.append((nx,ny))




while True:
    m, n = map(int, input().split())
    if n==0 and m ==0:
        break
    count = 0
    graph = []
    visit = [[0] * m for _ in range(n)]
    for _ in range(n):
        graph.append(list(map(int,input().split())))

    for i in range(n):
        for j in range(m):
            if visit[i][j] ==0 and graph[i][j]==1:
                bfs(i,j)
                count = count + 1
    print(count)
