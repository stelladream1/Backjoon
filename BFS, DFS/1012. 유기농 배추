from collections import deque

dx = [-1,0,1,0]
dy = [0,1,0,-1]
q = deque()

def bfs(x,y):
    q.append((x,y))
    visit[x][y] = 1
    graph[x][y] = 0
    while q:
        x,y = q.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0<=nx <n and 0<=ny<m:
                if graph[nx][ny]==1 and visit[nx][ny]==0:
                    q.append((nx,ny))
                    graph[nx][ny] = 0
                    visit[nx][ny] = 1
T = int(input())
for i in range(T):
    count = 0
    n, m, k = map(int, input().split(" "))
    graph = [[0] * m for _ in range(n)]
    visit = [[0] * m for _ in range(n)]
    for _ in range(k):
        a,b = map(int,input().split())
        graph[a][b]=1

    for j in range(n):
        for k in range(m):
            if graph[j][k]==1:
                bfs(j,k)
                count = count + 1
    print(count)
